setwd("~/Google Drive/Learning/github/code_snippets_R/code")
install.packages(c("gam", "manipulate"))
#set up chart theme function and load required packages
chart.theme.size = 14
source("../r_config/r_env_setup.R") #load packages and cutom ggplot theme function and presets
path_data = "../data/ISLR_data/"
library(MASS)
#install.packages("ISLR")
library(ISLR)
##Writing R functions
regplot=function(x,y){
fit=lm(y~x)
plot(x,y)
abline(fit,col="red")
}
attach(Carseats)
regplot(Price,Sales)
#the ... arguments get passed as it is in the function
regplot=function(x,y,...){
fit=lm(y~x)
plot(x,y,...)
abline(fit,col="red")
}
regplot(Price,Sales,xlab="Price",ylab="Sales",col="blue",pch=20)
fit
fit1
names(Carseats)
summary(Carseats)
fit1=lm(Sales~.+Income*Advertising+Age*Price,Carseats)
summary(fit1)
contrasts(Carseats$ShelveLoc)
names(Smarket)
summary(Smarket)
head(Smarket, 3)
?Smarket
pairs(Smarket,col=Smarket$Direction)
ggpairs(Smarket,params=list(corSize=4, fontsize = 4))
ggpairs(Smarket,params=list(corSize=4, fontsize = 4, color = Direction))
ggpairs(Smarket,params=list(corSize=4, fontsize = 4, color = Smarket$Direction))
ggpairs(Smarket,params=list(corSize=4, fontsize = 4, color = "Direction"))
ggpairs(Smarket,params=list(corSize=4, fontsize = 4), , color = "Direction")
examples(ggpairs)
example(ggpairs)
examples(ggpairs)
example(ggpairs)
View(tips)
?ggpairs
corrplot(M, method = "number")
#This script is used to load/ install the required packages and setup the theme for ggplot2 charts
#list of required packages
packages = list("ggplot2",
"ggthemes",
"scales",
"lubridate",
"stringr",
"gridExtra",
"dplyr",
"readr",
"data.table",
"tidyr",
"RColorBrewer",
"knitr",
"htmlTable",
"grid",
"xtable",
"energy",
"GGally",
"caret",
"corrplot")
# check for installed packages, install missing ones and load the ones specified in "packages"
for (package in packages){
if (package %in% installed.packages()[,"Package"] == FALSE){
install.packages(package, dependencies = T); # install missing packages
}
#load the package in R
library(package, character.only = TRUE)
}
corrplot(M, method = "number")
corrplot(Smarket, method = "number")
pairs(Smarket,col=Smarket$Direction)
ggpairs(Smarket, columns = c(1:5), params=list(corSize=10))
ggpairs(Smarket, columns = c(1:5), params=list(corSize=5))
head(Smarket, 3)
ggpairs(Smarket, columns = c(1:5), color = "Direction", params=list(corSize=5))
ggpairs(Smarket, columns = c(5:7), color = "Direction", params=list(corSize=5))
ggpairs(Smarket, columns = c(7:9), color = "Direction", params=list(corSize=5))
ggpairs(Smarket, columns = c(6:9), color = "Direction", params=list(corSize=5))
# Logistic regression
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial)
glm.fit
summary(glm.fit)
glm.fit = train(data = Smarket, Smarket$Direction ~. , method = "glm", family=binomial )
summary(glm.fit)
glm.fit.model = train(data = Smarket, Smarket$Direction ~. , method = "glm", family=binomial )
summary(glm.fit.model)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial)
summary(glm.fit)
glm.fit.model = train(data = Smarket,
Smarket$Direction ~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, method = "glm", family=binomial )
summary(glm.fit.model)
glm.fit.model = train(data = Smarket,
Smarket$Direction ~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, method = "glm", family=binomial )
glm.fit.model = train(data = Smarket,
Smarket$Direction ~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, method = "glm", family="binomial")
summary(glm.fit.model)
confusionMatrix(testing$type, predict(glm.fit.model, testing))
glm.fit.model$finalModel$coefficients
glm.fit.model$finalModel
glm.fit.model$finalModel$coefficients
106/(76+106)
# Make training and test set
train = Year<2005
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial, subset=train)
glm.probs=predict(glm.fit,newdata=Smarket[!train,],type="response")
glm.pred=ifelse(glm.probs >0.5,"Up","Down")
Direction.2005=Smarket$Direction[!train]
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
#Fit smaller model
glm.fit=glm(Direction~Lag1+Lag2,
data=Smarket,family=binomial, subset=train)
glm.probs=predict(glm.fit,newdata=Smarket[!train,],type="response")
glm.pred=ifelse(glm.probs >0.5,"Up","Down")
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
106/(76+106)
train = Year<2005
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial)
summary(glm.fit)
glm.probs=predict(glm.fit,type="response")
glm.probs[1:5]
glm.pred=ifelse(glm.probs>0.5,"Up","Down")
attach(Smarket)
table(glm.pred,Direction)
mean(glm.pred==Direction)
# Make training and test set
train = Year<2005
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial, subset=train)
glm.probs=predict(glm.fit,newdata=Smarket[!train,],type="response")
glm.pred=ifelse(glm.probs >0.5,"Up","Down")
Direction.2005=Smarket$Direction[!train]
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
#Fit smaller model
glm.fit=glm(Direction~Lag1+Lag2,
data=Smarket,family=binomial, subset=train)
glm.probs=predict(glm.fit,newdata=Smarket[!train,],type="response")
glm.pred=ifelse(glm.probs >0.5,"Up","Down")
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
106/(76+106)
glm.fit.model = train(data = Smarket,
Smarket$Direction ~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
preProcess = c("scale", "center"),
method = "glm", family=binomial(link = "logit"))
summary(glm.fit.model)
glm.fit.model$finalModel$coefficients
qplot(x=Var1, y=Var2, data=melt(cor(attitude)), fill=value, geom="tile")
cor(Smarket)
data <- airquality[,1:4]
data
cor(data)
cor(filter(data, !is.na))
cor(filter(data, !is.na(Ozone)))
summary(data)
cor(filter(data, !is.na(Ozone)))
names(glm.fit.model)
names(glm.fit.model$finalModel)
glm.fit.model$finalModel$coefficients
ggplot(data = reddit_df, aes(x = age.range)) +
geom_bar_custom +
chart_theme_bar +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))+
annotate("text", x = Inf, y = -Inf, label = "sumitbajaj.me", hjust=1.1, vjust= -.5, col="gray",
cex=3,
#size = chart.theme.size*.25,
alpha = 0.8)
ggplot(data = reddit_df, aes(x = age.range)) +
geom_bar_custom +
chart_theme_bar +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))+
chart_footer
#load the reddit dataset
reddit_df <- read.csv("../data/reddit.csv", header = T,
stringsAsFactors=TRUE, sep=",",
nrow = 1000)
#Number of rows and columns
dim(reddit_df)
#List of variables
names(reddit_df)
#structure of the dataset
str(reddit_df)
#levels of employment status
levels(reddit_df$age.range)
#count summary of employement status
table(reddit_df$age.range)
#barblot for age range
foot_text = "Source: xxx"
#p<-
ggplot(data = reddit_df, aes(x = age.range)) +
geom_bar_custom +
chart_theme_bar +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))+
chart_footer
#print(p)
#ggsave("test.png", width=12, height=9, p)
#chart_footer
#theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
#geom_hline(yintercept=0, size=0.75, color="grey")
#Notice that under18 bucket is at the end which is non-intuitive
#This script is used to load/ install the required packages and setup the theme for ggplot2 charts
#list of required packages
packages = list("scales",
"lubridate",
"stringr",
"gridExtra",
"readr",
"data.table",
"tidyr",
"RColorBrewer",
"knitr",
"htmlTable",
"grid",
"xtable",
"energy",
"GGally",
"caret",
"corrplot",
"ggplot2",
"ggthemes",
"dplyr")
# check for installed packages, install missing ones and load the ones specified in "packages"
for (package in packages){
if (package %in% installed.packages()[,"Package"] == FALSE){
install.packages(package, dependencies = T); # install missing packages
}
#load the package in R
library(package, character.only = TRUE)
}
update.packages(checkBuilt=TRUE, ask=FALSE)
update.packages(checkBuilt=TRUE, ask=FALSE)
#This script is used to load/ install the required packages and setup the theme for ggplot2 charts
#Update all installed packages
update.packages(checkBuilt=TRUE, ask=FALSE)
#list of required packages
packages = list("scales",
"lubridate",
"stringr",
"gridExtra",
"readr",
"data.table",
"tidyr",
"RColorBrewer",
"knitr",
"htmlTable",
"grid",
"xtable",
"energy",
"GGally",
"caret",
"corrplot",
"ggplot2",
"ggthemes",
"dplyr")
# check for installed packages, install missing ones and load the ones specified in "packages"
for (package in packages){
if (package %in% installed.packages()[,"Package"] == FALSE){
install.packages(package, dependencies = T); # install missing packages
}
#load the package in R
library(package, character.only = TRUE)
}
library(knitr)
opts_chunk$set(results="hide", fig.show="hide", fig.keep="none")
#set up chart theme function and load required packages
chart.theme.size = 14
#theme_set(theme_minimal(chart.theme.size)) #minimal theme as default
#load packages and cutom ggplot theme function and presets
source("../r_config/r_packages_setupv1.R")
#load the reddit dataset
reddit_df <- read.csv("../data/reddit.csv", header = T,
stringsAsFactors=TRUE, sep=",",
nrow = 1000)
#Number of rows and columns
#dim(reddit_df)
#List of variables
#names(reddit_df)
#structure of the dataset
#str(reddit_df)
#levels of employment status
#levels(reddit_df$age.range)
#count summary of employement status
#table(reddit_df$age.range)
#barblot for age range
#foot_text = "Source: xxx"
#p<-
ggplot(data = reddit_df, aes(x = age.range)) +
geom_bar_custom +
chart_theme_bar +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))+
chart_footer
#print(p)
#ggsave("test.png", width=12, height=9, p)
#chart_footer
#theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
#geom_hline(yintercept=0, size=0.75, color="grey")
#Notice that under18 bucket is at the end which is non-intuitive
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
complete = TRUE
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base +
geom_bar_custom
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
theme(complete = TRUE)
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base +
geom_bar_custom
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base +
geom_bar()
ggplot(data = reddit_df, aes(x = age.range)) +
geom_bar_custom +
chart_theme_bar +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))+
chart_footer
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
# theme(complete = TRUE)
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
#custom theme function for ggplot2 charts
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
theme(complete = TRUE)
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
#size attributes - font, gridline etc.
gridline.size = .15
#crude hack for geom_text text size scaling
text.size <<- (5/14)*0.8*fsize
#Generate the grey colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.grid.minor = palette[3]
color.axis.text = palette[6]
#color.axis.title = palette[7]
color.axis.title = palette[5]
color.title = palette[7]
#start construction of the custom theme
theme(
#basic shapes formatting
line = element_line(colour = color_primary_pal[1], size = 0.5, linetype = 1, lineend = "butt"),
rect = element_rect(fill = color_primary_pal[1]),
text = element_text(colour = "black", size = fsize*0.8, hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9),
complete = TRUE)
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
#custom theme function for ggplot2 charts
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
#size attributes - font, gridline etc.
gridline.size = .15
#crude hack for geom_text text size scaling
text.size <<- (5/14)*0.8*fsize
#Generate the grey colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.grid.minor = palette[3]
color.axis.text = palette[6]
#color.axis.title = palette[7]
color.axis.title = palette[5]
color.title = palette[7]
#start construction of the custom theme
theme(
#basic shapes formatting
line = element_line(colour = color_primary_pal[1], size = 0.5, linetype = 1, lineend = "butt"),
rect = element_rect(fill = color_primary_pal[1]),
#text = element_text(colour = "black", size = fsize*0.8, hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9),
complete = TRUE)
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
source("../r_config/r_packages_setupv1.R")
#This script is used to load/ install the required packages and setup the theme for ggplot2 charts
#Update all installed packages
update.packages(checkBuilt=TRUE, ask=FALSE)
#https://support.rstudio.com/hc/en-us/articles/201057987-Quick-list-of-useful-R-packages
#list of required packages
packages = list("scales",
"lubridate",
"stringr",
"gridExtra",
"readr",
"data.table",
"tidyr",
"RColorBrewer",
"knitr",
"htmlTable",
"grid",
"xtable",
"energy",
"GGally",
"caret",
"corrplot",
"ggplot2",
"ggthemes",
"dplyr")
# check for installed packages, install missing ones and load the ones specified in "packages"
for (package in packages){
if (package %in% installed.packages()[,"Package"] == FALSE){
install.packages(package, dependencies = T); # install missing packages
}
#load the package in R
library(package, character.only = TRUE)
}
#Specify custom color palettes
color_primary_pal = c("#1A75CF", "#003896", "#6CABE7")
color_highlight_pal = c("#F47B20", "#FDBB30", "#337321", "#61BF1A")
color_fill_selective_pal = c("#F47B20", "#FDBB30")
#Default font size for charts
chart.theme.size = 14
chart.line.size = 0.75
#chart theme presets for the custom theme function
chart_format_default <- c(fsize=chart.theme.size, vgrid=1, hgrid=1, mvgrid=0, mhgrid=0)
chart_format_hist1 <- c(fsize=chart.theme.size, vgrid=1, hgrid=1, mvgrid=1, mhgrid=1)
chart_format_hist_no_minor <- c(fsize=chart.theme.size, vgrid=1, hgrid=1, mvgrid=0, mhgrid=0)
chart_format_hist_no_vgrid <- c(fsize=chart.theme.size, vgrid=0, hgrid=1, mvgrid=0, mhgrid=0)
chart_format_bar1 <- c(fsize=chart.theme.size, vgrid=0, hgrid=1, mvgrid=0, mhgrid=1)
chart_format_bar2 <- c(fsize=chart.theme.size, vgrid=0, hgrid=1, mvgrid=0, mhgrid=0)
#set default theme as minimal(charts will adhere to this in case the custom theme function is not called)
#theme_set(theme_minimal(chart.theme.size)) #minimal theme as default
#custom theme function for ggplot2 charts
chart_theme_custom_base <- function(fsize = chart.theme.size,
vgrid = 0,
hgrid = 1,
mvgrid=0,
mhgrid=0) {
#size attributes - font, gridline etc.
gridline.size = .15
#crude hack for geom_text text size scaling
text.size <<- (5/14)*0.8*fsize
#Generate the grey colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.grid.minor = palette[3]
color.axis.text = palette[6]
#color.axis.title = palette[7]
color.axis.title = palette[5]
color.title = palette[7]
#start construction of the custom theme
theme(
#basic shapes formatting
line = element_line(colour = color_primary_pal[1], size = 0.5, linetype = 1, lineend = "butt"),
rect = element_rect(fill = color_primary_pal[1]),
#text = element_text(colour = "black", size = fsize*0.8, hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9),
complete = TRUE)
}
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
reddit_df <- read.csv("../data/reddit.csv", header = T,
stringsAsFactors=TRUE, sep=",",
nrow = 1000)
#Number of rows and columns
#dim(reddit_df)
#List of variables
ggplot(data = reddit_df, aes(x = age.range)) +
chart_theme_custom_base() +
geom_bar()
